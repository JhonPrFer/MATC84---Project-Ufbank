{
  "$schema": "https://biomejs.dev/schemas/2.2.4/schema.json",
  "files": {
    "includes": ["**/*.ts", "**/*.tsx", "!**/.next", "!**/dist", "!**/node_modules", "!**/coverage"]
  },
  "formatter": {
    "enabled": true,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineWidth": 120,
    "includes": ["**", "!**/src/config/db/migration/"]
  },
  "assist": { "actions": { "source": { "organizeImports": "off" } } },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": false,
      "complexity": {
        "noBannedTypes": "warn",
        "noExtraBooleanCast": "error",
        "noStaticOnlyClass": "warn",
        "noThisInStatic": "warn",
        "noUselessCatch": "error",
        "noUselessConstructor": "error",
        "noUselessLoneBlockStatements": "error",
        "noUselessRename": "error",
        "noUselessTernary": "error",
        "noUselessThisAlias": "error",
        "noUselessTypeConstraint": "error",
        "noUselessUndefinedInitialization": "error",
        "noVoid": "warn",
        "useLiteralKeys": "warn",
        "useOptionalChain": "warn",
        "useRegexLiterals": "error",
        "noAdjacentSpacesInRegex": "error",
        "noUselessContinue": "warn",
        "noCommaOperator": "error"
      },
      "correctness": {
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInvalidConstructorSuper": "error",
        "noInvalidUseBeforeDeclaration": "error",
        "noPrecisionLoss": "error",
        "noSelfAssign": "error",
        "noSwitchDeclarations": "warn",
        "noUndeclaredVariables": "off",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnusedVariables": "error",
        "useIsNan": "error",
        "noUnusedImports": "error",
        "noInvalidBuiltinInstantiation": "error",
        "useValidTypeof": "error"
      },
      "performance": { "noAccumulatingSpread": "warn", "noDelete": "warn" },
      "security": { "noGlobalEval": "error" },
      "style": {
        "noNamespace": "warn",
        "noNonNullAssertion": "warn",
        "noUselessElse": "warn",
        "noYodaExpression": "error",
        "useBlockStatements": "off",
        "useConsistentArrayType": {
          "level": "warn",
          "options": { "syntax": "shorthand" }
        },
        "useConsistentBuiltinInstantiation": "warn",
        "useConst": "error",
        "useExportType": "warn",
        "useImportType": "off",
        "useShorthandFunctionType": "warn",
        "useTemplate": "warn",
        "useThrowOnlyError": "warn",
        "useArrayLiterals": "error"
      },
      "suspicious": {
        "noAssignInExpressions": "warn",
        "noAsyncPromiseExecutor": "warn",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCompareNegZero": "error",
        "noConfusingLabels": "error",
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDoubleEquals": "warn",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "warn",
        "noEmptyInterface": "error",
        "noExplicitAny": "warn",
        "noExtraNonNullAssertion": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImplicitAnyLet": "warn",
        "noImportAssign": "error",
        "noMisleadingCharacterClass": "warn",
        "noMisleadingInstantiator": "error",
        "noPrototypeBuiltins": "warn",
        "noRedeclare": "error",
        "noSelfCompare": "error",
        "noShadowRestrictedNames": "error",
        "noSparseArray": "error",
        "noUnsafeNegation": "error",
        "useDefaultSwitchClauseLast": "error",
        "noWith": "error",
        "noVar": "warn"
      }
    },
    "includes": ["**", "!**/.next", "!**/dist"]
  },
  "javascript": {
    "formatter": {
      "jsxQuoteStyle": "single",
      "trailingCommas": "es5",
      "semicolons": "asNeeded",
      "quoteStyle": "single"
    },
    "parser": { "unsafeParameterDecoratorsEnabled": true },
    "globals": ["document", "navigator", "window", "exports"]
  }
}
